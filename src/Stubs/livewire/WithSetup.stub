<?php

namespace App\Http\Livewire\Traits;

use Illuminate\Support\Facades\Storage;
use Illuminate\Support\Str;

trait WithSetup
{

    public bool $createAction = false;

    public bool $sortDirection = true;
    public string $search = '';
    public int $perPage = 10;

    public string $bodyDeleteModal = 'Esta seguro de eliminar el item seleccionado?';
    public bool $showDeleteModal = false;

    public string $parameterAction = '';
    public int|null $parameterId = null;

    public $newTrixAttachmentFile;

    public function sortBy (string $field)
    {
        if ($this->sortField == $field)
        {
            $this->sortDirection = ! $this->sortDirection;
        } else
        {
            $this->sortDirection = true;
        }

        $this->sortField = $field;
    }

    public function setNewFile (string $field, string $disk)
    {
        if ($this->newFile)
        {
            Storage::disk($disk)->delete($this->editing->$field);
            $this->editing->$field = $this->newFile->store('/', $disk);
        }
    }

    public function setSlug (string $field)
    {
        $this->editing->slug = Str::slug($this->editing->$field);
    }

    public function index ()
    {
        $this->reset(['parameterId', 'parameterAction']);
    }

    public function trixAttachmentUpload (string $url, string $event)
    {
        if ($this->newTrixAttachmentFile->getFilename() == $url)
        {
            $attachmentFile = $this->newTrixAttachmentFile->store('/', $this->disk);
            $url = Storage::disk($this->disk)->url($attachmentFile);

            $this->dispatchBrowserEvent($event, [
                'url' => $url,
                'href' => $url,
            ]);
        }
    }

}