<?php

namespace :namespace:;

use App\Http\Livewire\Traits\WithSaveNewImage;
use App\Http\Livewire\Traits\WithSetup;
use Illuminate\Contracts\Foundation\Application;
use Illuminate\Contracts\View\Factory;
use Illuminate\Contracts\View\View;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\WithPagination;
:useModels:

class :className:Livewire extends Component
{
    use WithPagination, WithFileUploads, WithSaveNewImage;
    use WithSetup;

    public :editing: $editing;
    public string $sortField = ':sortField:';
    :newImage:



    public function confirmDelete ()
    {
        :detach:
        $this->editing->delete();
        $this->showDeleteModal = false;
    }

    public function delete (:modelArgument:)
    {
        $this->bodyDeleteModal = 'Esta seguro de eliminar el item seleccionado?';
        $this->editing = :varModel:;
        $this->showDeleteModal = true;
    }

    public function edit (:modelArgument:)
    {
        $this->resetValidation();
        $this->createAction = false;
        $this->titleFormModal = 'Editar';
        $this->editing = :varModel:;
        :editNewImage:
        $this->showFormModal = true;
    }

    public function create ()
    {
        $this->resetValidation();
        $this->createAction = true;
        $this->titleFormModal = 'Crear';
        $this->editing = :modelName:::make();
        :createNewImage:
        $this->showFormModal = true;
    }

    public function save ()
    {
        $this->validate();
        :saveNewImage:
        :saveSlug:
        $this->editing->save();
        $this->showFormModal = false;
    }

    public function rules (): array
    {
        :rules:
    }

    public function render (): Factory|View|Application
    {
        return view(':view:', [
            'rows' => :modelName:::search($this->search)
                ->orderBy($this->sortField, $this->sortDirection ? 'desc' : 'asc')
                ->paginate($this->perPage),
        ]);
    }

    public function mount ()
    {
        $this->editing = :modelName:::make();
    }
}