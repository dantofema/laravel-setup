<?php

namespace :namespace:;

:useDefault:
use App\Http\Livewire\Traits\WithSetup;
use Illuminate\Contracts\Foundation\Application;
use Illuminate\Contracts\View\Factory;
use Illuminate\Contracts\View\View;
use Livewire\Component;
use Livewire\WithFileUploads;
use Livewire\WithPagination;
:useCollection:

class :livewire: extends Component
{
    use WithPagination, WithFileUploads;
    use WithSetup;

    public :model: $editing;
    public string $sortField = ':sortField:';
    :newFiles:
    :properties:

    public function confirmDelete ()
    {
        :detach:
        $this->editing->delete();
        $this->showDeleteModal = false;
    }

    public function delete (:model: $model)
    {
        $this->bodyDeleteModal = 'Esta seguro de eliminar el item seleccionado?';
        $this->editing = $model;
        $this->showDeleteModal = true;
    }

    public function edit (:model: $model)
    {
        $this->resetValidation();
        $this->createAction = false;
        $this->titleFormModal = 'Editar';
        $this->editing = $model;
        :editNewFiles:
        :editBelongsToMany:
        $this->showFormModal = true;
    }

    public function create ()
    {
        $this->resetValidation();
        $this->createAction = true;
        $this->titleFormModal = 'Crear';
        $this->editing = :model:::make();
        :createNewFiles:
        $this->showFormModal = true;
    }

    public function save ()
    {
        :saveNewFiles:
        :saveSlug:
        $this->validate();
        $this->editing->save();
        :syncBelongsToMany:
        $this->showFormModal = false;
    }

    public function rules (): array
    {
        :rules:
    }

    public function render (): Factory|View|Application
    {
        return view(':renderView:', [
            'rows' => :model:::search($this->search)
                ->orderBy($this->sortField, $this->sortDirection ? 'desc' : 'asc')
                ->paginate($this->perPage),
        ]):layout:;
    }


    :belongsToManyMethods:

    public function mount ()
    {
        $this->editing = :model:::make();
        :queryRelationships:
    }
}